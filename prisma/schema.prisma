generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int              @id @default(autoincrement())
  email     String           @unique
  password  String
  name      String?
  role      Role             @default(STUDENT)
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  answers   Answer[]
  exams     ExamEnrollment[]
  results   Result[]
}

model Exam {
  id          Int              @id @default(autoincrement())
  title       String
  description String?
  subject     String
  duration    Int
  startTime   DateTime
  endTime     DateTime
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  enrollments ExamEnrollment[]
  questions   Question[]
  results     Result[]
}

model ExamEnrollment {
  id        Int        @id @default(autoincrement())
  userId    Int
  examId    Int
  status    ExamStatus @default(PENDING)
  createdAt DateTime   @default(now())
  exam      Exam       @relation(fields: [examId], references: [id])
  user      User       @relation(fields: [userId], references: [id])

  @@unique([userId, examId])
}

model Question {
  id            Int          @id @default(autoincrement())
  examId        Int
  question      String
  type          QuestionType @default(MCQ)
  choices       String[]     @default([])
  correctAnswer String?
  createdAt     DateTime     @default(now())
  answers       Answer[]
  exam          Exam         @relation(fields: [examId], references: [id])
}

model Answer {
  id         Int      @id @default(autoincrement())
  userId     Int
  questionId Int
  answer     String
  isCorrect  Boolean?
  createdAt  DateTime @default(now())
  question   Question @relation(fields: [questionId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
}

model Result {
  id        Int          @id @default(autoincrement())
  userId    Int
  examId    Int
  score     Float
  status    ResultStatus @default(FAILED)
  createdAt DateTime     @default(now())
  exam      Exam         @relation(fields: [examId], references: [id])
  user      User         @relation(fields: [userId], references: [id])
}

enum Role {
  ADMIN
  STUDENT
}

enum QuestionType {
  MCQ
  ESSAY
  TRUE_FALSE
}

enum ExamStatus {
  PENDING
  COMPLETED
  CANCELLED
}

enum ResultStatus {
  PASSED
  FAILED
}
